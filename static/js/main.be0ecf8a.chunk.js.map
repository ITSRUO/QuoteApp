{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/hooks/use-http.js","components/lib/api.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","components/pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/pages/QuoteDetail.js","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","navigate","useNavigate","location","useLocation","console","log","quotes","ascending","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","QuoteDetail","useParams","Card","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","MainNavigation","header","logo","nav","navData","isActive","active","Layout","main","NotFound","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.be0ecf8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log(location);\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    // navigate({\n    //   pathname: location.pathname,\n    //   search: `?sort= ${isSortingAscending ? \"desc\" : \"asc\"}`,\n    // });\n    navigate('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'))\n    // navigate(location.pathname, {\n    //   search: `?sort=$`,\n    // });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react-http02-default-rtdb.firebaseio.com/\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n      Add a Quote</Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport NoQuotesFound from '../quotes/NoQuotesFound'\n\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(()=>{\n    sendRequest()\n  },[sendRequest])\n\n  if(status === 'pending'){\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n   )}\n\n   if (error){\n    return <p className='centered focused'>{error}</p>\n   }\n\n   if (status === 'completed' && (!loadedQuotes || loadedQuotes.length ===0)){\n    return <NoQuotesFound />\n   }\n  \n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, Outlet } from \"react-router-dom\";\n\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst QuoteDetail = () => {\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Outlet />\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const navigate = useNavigate()\n  useEffect(() => {\n    if (status === 'completed'){\n      navigate('/quotes')\n    }\n  }, [status,navigate]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return <QuoteForm isLoading={status==='pending'} onAddQuote={addQuoteHandler} />;\n};\n\nexport default NewQuote;\n","import classes from './MainNavigation.module.css'\nimport { NavLink } from 'react-router-dom'\nconst MainNavigation =() => {\n    return(\n        <header className={classes.header}>\n            <div className={classes.logo}> Great Quotes</div>\n            <nav className={classes.nav}>\n                <ul>\n                    <li>\n                        <NavLink className={(navData)=>(navData.isActive ? classes.active : '') }\n                        to = '/quotes'>\n                            All Quotes\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink className={(navData)=>(navData.isActive ? classes.active : '') }\n                        to = '/new-quote'>\n                            Add a Quote\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default MainNavigation","import { Fragment } from 'react/cjs/react.production.min'\nimport classes from './Layout.module.css'\nimport MainNavigation from './MainNavigation'\n\nconst Layout = (props) => {\n    return (\n        <Fragment>\n            <MainNavigation />\n            <main className={classes.main}>{props.children}</main>\n        </Fragment>\n    )\n}\n\nexport default Layout","const NotFound = () => {\n    return (\n        <div className=\"centered\">\n            <p> Page NOT Found !</p>\n        </div>\n    )\n}\n\nexport default NotFound","import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { addComment } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText} , quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;","import { Route,Routes,Navigate, Link } from 'react-router-dom'\nimport AllQuotes from './components/pages/AllQuotes';\nimport QuoteDetail from './components/pages/QuoteDetail';\nimport NewQuote from './components/pages/NewQuote';\nimport Layout from './components/layout/Layout';\nimport NotFound from './components/pages/NotFound'\nimport Comments from './components/comments/Comments';\n\nfunction App() {\n  return (\n    <Layout>\n\n    <Routes>\n      <Route path = '/' element = {<Navigate to='/quotes' />} />\n      <Route path='/quotes' element={<AllQuotes />} />\n      <Route path='/quotes/:quoteId/*' element={<QuoteDetail />} >\n        <Route path='' element={<div className='centered'>\n        <Link className='btn--flat' to={`comments`}>Load Comments</Link>\n        </div>} />\n        <Route path={`comments`} element={<Comments />} />\n      </Route>\n      <Route path='/new-quote' element={<NewQuote />} />\n      <Route path='*' element={<NotFound />}/>\n    </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}